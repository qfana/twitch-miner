import { Telegraf, session, Context, Markup } from 'telegraf';
import dotenv from 'dotenv';
import { Stage } from 'telegraf/scenes';
dotenv.config();


interface BotContext extends Context {
  session: {
    step?: 'token' | 'games' | 'fallback';
  };
}

export class BotManager {
    private bot: Telegraf<BotContext>;

    constructor () {
        this.bot = new Telegraf<BotContext>(process.env.TELEGRAM_TOKEN!);

        this.Init();
    }

    public async Init() {
        this.bot.use(session());
        
        this.bot.start(ctx => {
            return ctx.reply(
                '–ü—Ä–∏–≤–µ—Ç! –ß–µ–º –∑–∞–π–º—ë–º—Å—è?',
                Markup.keyboard([
                    [ Markup.button.callback('‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ñ–∞—Ä–º', 'START_FARM') ],
                    [ Markup.button.callback('‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–∞—Ä–º', 'STOP_FARM') ],
                    [ Markup.button.callback('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏',    'SETTINGS')   ],
                    [ Markup.button.callback('üìä –°—Ç–∞—Ç—É—Å',       'STATUS')     ],
                    [ Markup.button.callback('üí≥ –ü–æ–¥–ø–∏—Å–∫–∞',     'SUBSCRIBE')  ],
                ])
            );
        });

        // this.bot.hears('‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ñ–∞—Ä–º', ctx => ctx.reply('–§–∞—Ä–º –∑–∞–ø—É—â–µ–Ω!'));
        // this.bot.hears('‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–∞—Ä–º', ctx => ctx.reply('–§–∞—Ä–º –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'));
        // this.bot.hears('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', ctx => ctx.reply('–ó–¥–µ—Å—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...'));
        // this.bot.hears('üìä –°—Ç–∞—Ç—É—Å', ctx => ctx.reply('–í–∞—à —Å—Ç–∞—Ç—É—Å...'));
        // this.bot.hears('üí≥ –ü–æ–¥–ø–∏—Å–∫–∞', ctx => ctx.reply('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–ø–∏—Å–∫–µ...'));
    }

    public async launch() {
        await this.bot.launch();
        console.log('Telegram bot launched');
    }

}

const test = new BotManager();
test.launch();
