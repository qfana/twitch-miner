import { Telegraf, session, Context, Markup } from 'telegraf';
import dotenv from 'dotenv';
import { Stage } from 'telegraf/scenes';
dotenv.config();


interface BotContext extends Context {
  session: {
    step?: 'token' | 'games' | 'fallback';
  };
}

export class BotManager {
    private bot: Telegraf<BotContext>;

    constructor () {
        this.bot = new Telegraf<BotContext>(process.env.TELEGRAM_TOKEN!);

        this.Init();
    }

    public async Init() {
        this.bot.use(session());

        this.bot.start(ctx => {
              return ctx.reply(
                '–ü—Ä–∏–≤–µ—Ç! –ß–µ–º –∑–∞–π–º—ë–º—Å—è?',
                Markup.keyboard([
                  ['‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ñ–∞—Ä–º', '‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–∞—Ä–º'],
                  ['‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', 'üìä –°—Ç–∞—Ç—É—Å'],
                  ['üí≥ –ü–æ–¥–ø–∏—Å–∫–∞']
                ])
                .resize()      // –ø–æ–¥–æ–≥–Ω–∞—Ç—å —Ä–∞–∑–º–µ—Ä
                .oneTime(false) // –æ—Å—Ç–∞–≤–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –Ω–∞–∂–∞—Ç–∏—è
              );
            });
    }

    public async launch() {
        await this.bot.launch();
        console.log('Telegram bot launched');
    }
}

const test = new BotManager();
test.launch();
